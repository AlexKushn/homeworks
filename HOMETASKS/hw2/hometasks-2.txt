Задание 1: Квадраты.

УСЛОВИЕ:
Фрагмент кода, который принимает набор (список, кортеж) чисел и возвращает набор
ТОГО ЖЕ типа со значениями квадратов этих чисел.

Пример:
[1,2,3] >> [1,4,9]
(1,2,3) >> (1,4,9)
================================================================================

Задание 2: Симметрия.

УСЛОВИЕ:
Фрагмент кода, который принимает строку и определяет симметрична ли строка.
(Возвращает True или False).

Пример:
"abba" >> True
"arbat" >> False
================================================================================

Задание 3: Триделение.

УСЛОВИЕ:
Фрагмент кода, который принимает список любых чисел и возвращает словарь вида:
{число: boolean}, где: boolean - True или False в зависимости делится ли число на 3
без остатка.

Пример:
[3,7,12] >> {3:True, 12:True, 7:False}
================================================================================

Задание 4: Чет-нечет.

УСЛОВИЕ:
Фрагмент кода, который принимает список любых чисел и фильтрует его по четным (удаляет нечетные),
если количество элементов в списке является четным и наоборот (удаляет четные, если элементов изначально нечетное количество).

Пример:
[3,7,12] >> [3,7]
[3,7,12,7] >> [12]
================================================================================

Задание 5: Сепаратор.

УСЛОВИЕ:
Фрагмент кода, который принимает список любых чисел и модифицирует его следующим образом:
- в начале списка идут нечетные числа в порядке возрастания,
- далее идут четные числа в порядке убывания.

Пример:
[1,4,8,6,3,7,1] >> [1,1,3,7,8,6,4]
================================================================================

Задание 6: Классификатор. (бонусное)

УСЛОВИЕ:
Фрагмент кода, который принимает словарь со значениями элементов разных типов,
а возвращает словарь вида {имя_типа : количество_элементов_этого_типа}.

Пример:
{'a': 1, 3: [1,5], 'e': 'abc', '6': []} >> {'str': 1, 'list': 2, 'int': 1}
================================================================================

Задание 7: Сепаратор.Адвансед (бонусное)

УСЛОВИЕ:
Выполнить задание 5 ("Сепаратор") с дополнительным условием:
чтобы входящий список и список возвращаемый были одним и тем же объектом, т.е.
должна произойти модификация списка, а не пересборка нового.

start_list = [1,4,8,6,3,7,1]
end_list = [1,1,3,7,8,6,4]
(start_list is end_list) == True

Пример:
[1,4,8,6,3,7,1] is [1,1,3,7,8,6,4]
================================================================================

Задание 8: Двууровневый кортеж. (бонусное)

УСЛОВИЕ:
Фрагмент кода, который принимает кортеж любых чисел и модифицирует его
в кортеж кортежей по два элемента (парами).

Пример:
(1,4,8,6,3,7,1) >> ((1,4),(8,6),(3,7),(1,))
================================================================================

Задание 9: Уплощение строптивого. (бонусное)

УСЛОВИЕ:
Фрагмент кода, который принимает список списков, и делает список "плоским" -
разворачивая элементы внутренних списков во вмещающий список.

Пример:
[[1],[4,8],[6,3,7],[1,3]] >> [1,4,8,6,3,7,1,3]
================================================================================

